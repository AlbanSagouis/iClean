dat <- as.data.frame(read_excel("C:/Users/as80fywe/Dropbox/ISAR Meta-analysis/Meta-data/env_file_alban.xlsx", sheet=2), stringsAsFactors=FALSE)
assume_good_order <- TRUE
# load Packages
required_packages <- c("biogeo","stringi","readxl")
packages_to_install <- required_packages[!required_packages %in% installed.packages()[,"Package"]]
install.packages(packages_to_install)
library(biogeo)	# library(required_packages)?
library(readxl)
library(stringi)
# load data
dat <- as.data.frame(read_excel("C:/Users/as80fywe/Dropbox/ISAR Meta-analysis/Meta-data/env_file_alban.xlsx", sheet=2), stringsAsFactors=FALSE)
dat <- data.frame(id=seq(1,nrow(dat)),study_ID=dat$study_ID, island_code=dat$island_code, coord=dat$island_coord, coord_old=dat$island_coord, stringsAsFactors=FALSE)
View(dat)
levels(dat$study_id)
factor(dat$study_id, levels=1:length(unique(dat$study_id)))
dat$study_id
factor(dat$study_ID, levels=1:length(unique(dat$study_ID)))
?factor
factor(dat$study_ID, levels=1:length(unique(dat$study_ID)), labels=1:length(unique(dat$study_ID)))
factor(x=dat$study_ID, levels=1:length(unique(dat$study_ID)), labels=1:length(unique(dat$study_ID)))
factor(x=dat$study_ID, levels=1:length(unique(dat$study_ID)), labels=unique(dat$study_ID))
factor(x=dat$study_ID, labels=1:length(unique(dat$study_ID)), levels=unique(dat$study_ID))
paste0("study_", factor(x=dat$study_ID, labels=1:length(unique(dat$study_ID)), levels=unique(dat$study_ID)))
dat$island_code
tapply(dat$study_ID, dat$island_code, function(x) 1:x)
tapply(dat$study_ID, dat$island_code, function(x) 1:length(x))
tapply(dat$island_code, dat$study_ID, function(x) 1:length(x))
dat$island_code <- tapply(dat$island_code, dat$study_ID, function(x) 1:length(x))
dat$island_code <- unlist(tapply(dat$island_code, dat$study_ID, function(x) 1:length(x)))
# load data
dat <- as.data.frame(read_excel("C:/Users/as80fywe/Dropbox/ISAR Meta-analysis/Meta-data/env_file_alban.xlsx", sheet=2), stringsAsFactors=FALSE)
dat <- data.frame(id=seq(1,nrow(dat)),study_ID=dat$study_ID, island_code=dat$island_code, coord=dat$island_coord, coord_old=dat$island_coord, stringsAsFactors=FALSE)
dat$study_ID <- paste0("study_", factor(x=dat$study_ID, labels=1:length(unique(dat$study_ID)), levels=unique(dat$study_ID)))
dat$island_code <- unlist(tapply(dat$island_code, dat$study_ID, function(x) 1:length(x)))
View(dat)
# function that convert coordinates in various formats to 2 columns, decimal degrees North East.
rm(list=ls())
# arguments
assume_good_order <- TRUE
# load Packages
library(biogeo)
library(readxl)
library(stringi)
# load data
dat <- as.data.frame(read_excel("C:/Users/as80fywe/Dropbox/ISAR Meta-analysis/Meta-data/env_file_alban.xlsx", sheet=2), stringsAsFactors=FALSE)
#dat <- as.data.frame(read_excel("C:/Users/as80fywe/idiv/functions/coord_test_data.xlsx", sheet=1), stringsAsFactors=FALSE)
dat <- data.frame(id=seq(1,nrow(dat)),study_ID=dat$study_ID, island_code=dat$island_code, coord=dat$island_coord, coord_old=dat$island_coord, stringsAsFactors=FALSE)
dat$study_ID <- paste0("study_", factor(x=dat$study_ID, labels=1:length(unique(dat$study_ID)), levels=unique(dat$study_ID)))
dat$island_code <- unlist(tapply(dat$island_code, dat$study_ID, function(x) 1:length(x)))
dat$coord <- as.character(dat$coord)
View(dat)
dat$coord <- dat$coord_old
dat <- dat[,-5]
dat <- na.omit(dat)
save(dat, "/data/test_dataset_1")
save(dat, file="/data/test_dataset_1")
getwd()
save(dat, file="data/test_dataset_1")
packrat::clean()
packrat::clean()
load("data/coordinates_test_dataset_1")
ls()
save(dat, file="data/coordinates_test_dataset_1")
load("data/coordinates_test_dataset_1")
ls()
dat
head(dat)
coords <- dat$coord
coords <- gsub(x=coords, pattern="\r\n", replacement=" ")
# " to ”
coords <- gsub(x=coords, pattern="\"", replacement="”")
# ʺ to ”
coords <- gsub(x=coords, pattern="\ʺ", replacement="”")	# does not work yet for encoding reasons. R seems to automatically this character to " in commands but not in the char vector making it hard to reach. Done in Excel for now
# ' to ’
coords <- gsub(x=coords, pattern="\'", replacement="’")
# ʹ to ’
coords <- gsub(x=coords, pattern="\ʹ", replacement="’")	# does not work yet for encoding reasons. R seems to automatically this character to ' in commands but not in the char vector making it hard to reach. Done in Excel for now
# ’’ to ”
coords <- gsub(x=coords, pattern="’’", replacement="”")
# ʹʹ to ”
coords <- gsub(x=coords, pattern="\ʹ\ʹ", replacement="”")
# '' to ’
coords <- gsub(x=coords, pattern="\'\'", replacement="”")
# replacing commas used as decimal separator by dots
coords <- gsub(x=coords, pattern="([0-9])(,)([0-9])", replacement="\\1\\.\\3")
# e to E, w to W, n to N, s to S
coords <- toupper(coords)
# adding spaces to separate easting and northing from numeric values
coords <- gsub(x=coords, pattern="(.)([A-Z])", replacement="\\1 \\2")
coords <- gsub(x=coords, pattern="([A-Z])([0-9])", replacement="\\1 \\2")
dim(dat)
?stri_count
stringi::stri_count
install.packages('stringi')
devtools::install_github("gadenbuie/regexplain")
